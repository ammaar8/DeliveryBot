<?xml version="1.0"?>
<launch>
    // world
    <param name="/use_sim_time" value="true"/>
    <arg name="gui" default="true" />

    <group if="$(arg gui)">
        <node name="gazebo" pkg="gazebo_ros" type="gazebo" args="$(find elevator_control)/worlds/building_world.world" />
    </group>

    <group unless="$(arg gui)">
        <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="$(find elevator_control)/worlds/building_world.world" />
    </group>
    // elevator
    // elevator control
    <group ns="elevator">
        <param name="tf_prefix" value="elevator" />
        <!-- Spawn Elevator Model -->
        <arg name="x" default="0"/>
        <arg name="y" default="0"/>
        <arg name="z" default="0"/>    
        <param name="robot_description" command="$(find xacro)/xacro '$(find elevator_control)/models/elevator/elevator.urdf'"/>
        <node name="elevator_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model elevator -x $(arg x) -y $(arg y) -z $(arg z)"/>

        <!-- Start Elevator Control -->
        <rosparam file="$(find elevator_control)/config/elevator_control.yaml" command="load" />
        <node name="elevator_controller_spawn" pkg="controller_manager" type="spawner" respawn="false" output="screen" 
            args= "
                floor_position_controller
                car_door_left_controller
                car_door_right_controller
                lobby_door_left_controller
                lobby_door_right_controller
                first_door_left_controller
                first_door_right_controller
                second_door_left_controller
                second_door_right_controller
                elevator_state_controller
                " />
	    <node name="elevator_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />

    </group>
    
    
    <group ns="dbot">
        // dbot
        <param name="tf_prefix" value="dbot" />
        <arg name="x" default="0.0"/>
        <arg name="y" default="-9.0"/>
        <arg name="z" default="0.5"/>
        <arg name="model" default="dbot_combined"/>
        <param name="robot_description" command="$(find xacro)/xacro '$(find deliverybot)/urdf/$(arg model).xacro'"/>
        <node name="aster_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model dbot -x $(arg x) -y $(arg y) -z $(arg z)"/>
        
        // dbot control
        <rosparam file="$(find deliverybot_control)/config/deliverybot_control.yaml" command="load"/>

        <node name="robot_controller_spawn" pkg="controller_manager" type="spawner" respawn="false"
            output="screen" args="door_position_controller pusher_position_controller joint_state_controller" />
        
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        </node>

    </group>

    // navigation

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find deliverybot)/rviz/rviz.rviz" />
    <node name="rqt" pkg="rqt_gui" type="rqt_gui" />

    <include file="$(find deliverybot_nav)/launch/deliverybot_navigation.launch" />

	<node name="deliverybot_gui" pkg="deliverybot_gui" type="launch_gui.py" />

</launch>
